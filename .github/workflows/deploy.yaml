name: Build and deploy

permissions:
  contents: write
  pages: write
  id-token: write

on:
  push:
    branches: [main]

jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nixbuild/nix-quick-install-action@v30
        with:
          nix_conf: |
            keep-env-derivations = true
            keep-outputs = true
      - uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
      - run: nix-build nix -A doc
      - uses: actions/upload-pages-artifact@v3
        with:
          path: result
      - uses: actions/deploy-pages@v4

  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: nixbuild/nix-quick-install-action@v30
        with:
          nix_conf: |
            keep-env-derivations = true
            keep-outputs = true
      - uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
      - run: nix-build nix -A bins.static
      - uses: actions/upload-artifact@v4
        with:
          name: "${{ matrix.os }}-static"
          path: result/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - uses: actions/download-artifact@v4
        with:
          path: artifacts/
      - uses: softprops/action-gh-release@v2
        with:
          tag_name: release-${{ steps.vars.outputs.sha_short }}
          files: artifacts/**/*
